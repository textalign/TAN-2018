REM Generated by Create App for XSL, template updated 2020-04-08
REM Written by Joel Kalvesmaki

REM Use this batch file with File Explorer. Drag one or more files onto it. 
REM It passes those resolved URLs as a list to the MIRU (main input via 
REM resolved urls) stylesheet defined in the variable _xslPath, normally 
REM the same name as this batch file. Study the stylesheet to see what the 
REM output will be. Adjust parameters directly here or in the stylesheet. 
REM The batch file can be adapted for any MIRU or a NIR (no input required) 
REM XSLT stylesheet. Make sure any relative paths are written according 
REM to the location of this batch file.

REM Switch to the batch file directory.
pushd "%~dp0"

REM Place-holder for filenames
set _fn=
REM Set to 1 if you want feedback on the command line
set _diagnostics=1
REM Place-holder to count the number of parameters
set _argCount=0
REM The fully resolved URI of this batch file
set _thisBatchName=%0

REM The next three parameters point to files: the XSLT, the output, and the
REM Saxon engine. Be sure to use Unix-style path separators, and write any
REM relative paths against the directory of the batch file.

REM Where is the XSLT file?
set _xslPath=%_thisBatchName:.bat=.xsl%
REM Where should any output go? Check the target stylesheet to see what output
REM if any there is. If there is none, or the output is of no consequence, leave
REM it blank
set _xslOutput=%_xslPath%.output.xml
REM Where is the Saxon processor?
set _saxonPath=../../processors/saxon9he.jar
REM what command-line options should be set for Saxon? For details see https://saxonica.com/documentation/index.html#!using-xsl/commandline
set _saxonOptions= 
REM What is the name of the one parameter that is expecting the sequence of resolved URLs?
set _keyParameter=main-input-resolved-uri-lists
REM What other parameters declared by the stylesheet if any should be provided?
set _otherParameters=

REM Set up temporary file. Presumes that the user has write permissions.
set _tempFile=%Time: =0%
set _tempFile=%_tempFile::=%
set _tempFile=%_tempFile:.=%
set _tempFile=%temp%\~gxt-validate-%_tempFile:,=%.tmp
type NUL > "%_tempFile%"
echo temporary File: %_tempFile%

REM Set up MIRU list parameter.
set _miruList=file:/!_tempFile: =%%20!
set _miruList=%_miruList:\=/%

REM Escape parentheses in the parameters otherwise the command for
REM will get tripped up.
set _allBatchParams=%*
set _allBatchParamsRevised=%_allBatchParams:(=^^^(%
set _allBatchParamsRevised=%_allBatchParamsRevised:)=^^^)%

if %_diagnostics% == 1 (
	echo parameters as revised: %_allBatchParamsRevised%
)

REM Process input URIs to find files in subdirectories.
for %%G in (%_allBatchParamsRevised%) do (
    set /A _argCount+=1
	echo %%G
    set _fn=%%G
	REM Normalize URI to XSLT specs: the file:/ protocol, percent-20
	REM for spaces, and slashes. UNC paths are doubled in XSLT syntax
	set _fn=file:/!_fn: =%%20!
	set _fn=!_fn:\\=////!
	set _fn=!_fn:\=/!
    if %_diagnostics% == 1 echo input url: !_fn!
    if exist %%G\* (
        if %_diagnostics% == 1 echo !_fn! is a directory
        for /f "tokens=*" %%U in ('dir %%G /B /S') do (
			set _dirFn=%%U
			set _dirFn=file:/!_dirFn: =%%20!
			set _dirFn=!_dirFn:\\=////!
			set _dirFn=!_dirFn:\=/!
            if not exist %%U\* (
                if %_diagnostics% == 1 echo adding file: !_dirFn!
				@echo !_dirFn! >> "%_tempFile%"
            )
			set /A _subCount+=1
        )
    ) else (
        if %_diagnostics% == 1 echo adding file: !_fn!
		@echo !_fn! >> "%_tempFile%"
    )
)

REM build the command line that will be sent to Saxon 
set _saxonComLine=java -cp "%_saxonPath%" net.sf.saxon.Transform -s:%_xslPath% -xsl:%_xslPath% %_saxonOptions% %_otherParameters% %_keyParameter%=%_miruList%

if %_diagnostics% == 1 (
    echo Number of parameters: %_argCount%
    echo Path to starting ^(master^) XSLT: %_xslPath%
    echo Path to Saxon processor: %_saxonPath%
	echo Path to list of MIRUs: %_miruList%
    echo Command line about to be executed: 
	echo %_saxonComLine%
	pause
)

REM Execute the command
%_saxonComLine%

if %_diagnostics% == 1 (
	echo Do not forget to delete temporary file %_tempFile%
	) else (
	del %_tempFile%
)

REM We pause so the user can read any messages
REM generated by the XSLT application.
pause
exit /B

:about

echo %0
echo To use this batch file: From Windows Explorer drag onto it any files or directories you want to be processed
pause
exit /B