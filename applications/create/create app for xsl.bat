echo off
setlocal EnableDelayedExpansion
REM Generated by Create App for XSL, template updated 2020-04-06
REM Written by Joel Kalvesmaki

REM Use this batch file with File Explorer. Drag one or more files onto it. It passes those resolved
REM URLs to the MIRU (main input via resolved urls) stylesheet defined in the variable _xslPath,
REM normally the same name as this batch file. Study the stylesheet to see what the output will 
REM be. Adjust parameters directly here or in the stylesheet. The batch file can be applied 
REM successfully to any MIRU stylesheet, or a NIR (no input required) XSLT stylesheet.
 
REM make sure the context directory is where the batch file is
pushd "%~dp0"
REM use a string that is quite unlikely to be in a filename, and is not a redirection character
set _delimiter=::::
set _inputUrls=
set _fn=
REM set to 1 if you want feedback on the command line
set _diagnostics=1
set _argCount=0
set _thisBatchName=%0
set _xslPath=%_thisBatchName:.bat=.xsl%
set _xslOutput=%_xslPath%.output.xml
REM point to the processor path relative to this batch file. Use Unix-style path separators.
set _saxonPath=../../processors/saxon9he.jar
REM what command-line options should be set for Saxon? For details see https://saxonica.com/documentation/index.html#!using-xsl/commandline
set _saxonOptions= 
REM what is the name of the one parameter that is expecting the sequence of resolved URLs?
set _keyParameter=main-input-resolved-urls

REM process input URLs to individuate files
for %%G in (%*) do (
    set /A _argCount+=1
    set _fn=%%G
    if %_diagnostics% == 1 echo input url: !_fn!
    if exist %%G\* (
        if %_diagnostics% == 1 echo !_fn! is a directory
        for /f "tokens=*" %%U in ('dir !_fn! /B /S') do (
            if not exist %%U\* (
                if %_diagnostics% == 1 echo dir file found: %%U
                if !_argCount! == 1 (
                    set _inputUrls=file:/%%U
                ) else (
                    set _inputUrls=!_inputUrls!%_delimiter%file:/%%U
                )
                if %_diagnostics% == 1 echo new input urls: !_inputUrls!
            )
        )
    ) else (
        if %_diagnostics% == 1 echo !_fn! is a file
        if !_argCount! == 1 (
            set _inputUrls=file:/!_fn!
        ) else (
            set _inputUrls=!_inputUrls!%_delimiter%file:/!_fn!
        )
        if %_diagnostics% == 1 echo new input urls: !_inputUrls!
    )
)
REM change Windows-style path separators to Unix-style  
set _inputUrls=!_inputUrls:\=/!
REM replace spaces with percent-20
set _inputUrls=!_inputUrls: =%%20!
REM get rid of quotation marks
set _inputUrls=!_inputUrls:"=!

REM build the command line that will be sent to Saxon 
set _saxonComLine=java -cp "%_saxonPath%" net.sf.saxon.Transform -s:%_xslPath% -xsl:%_xslPath% -o:%_xslOutput% %_saxonOptions% ?%_keyParameter%=tokenize^('!_inputUrls!','%_delimiter%'^^^)

if %_diagnostics% == 1 (
    echo diagnostics on for %_thisBatchName%
    echo Number of parameters: %_argCount%
    set _count=1
    for %%G in (%*) do (
        echo Input %_count%: %%G
        set /a _count+=1
    )
    echo revised input urls: !_inputUrls!
    echo Path to starting ^(master^) XSLT: %_xslPath%
    echo Path to Saxon processor: %_saxonPath%
    echo Command line to Saxon: %_saxonComLine%
)
REM Execute the command
%_saxonComLine%
REM We include the pause command so that the user can take time to read any important output messages
REM generated by the XSLT application.
pause
exit /B

:about

echo %0
echo To use this file: From Windows Explorer drag files onto this batch file that you want to be processed
pause
exit /B